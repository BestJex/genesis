<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.yctc.genesis.dao.TeacherLessonDAO">
	<resultMap type="edu.yctc.genesis.entity.TeacherLessonDO" id="TeacherLessonDO">
		<id column="id" property="id" jdbcType="BIGINT"/>
		<result column="user_id" property="userId"/>
		<result column="lesson_id" property="lessonId"/>
		<result column="create_time" property="createTime"/>
		<result column="modify_time" property="modifyTime"/>
	</resultMap>
	
	<resultMap type="edu.yctc.genesis.entity.LessonDO" id="LessonDO">
		<id column="id" property="id" jdbcType="BIGINT"/>
		<result column="course_id" property="courseId"/>
		<result column="number" property="number"/>
		<result column="classroom_id" property="classroomId"/>
		<result column="begin" property="begin"/>
		<result column="end" property="end"/>
		<result column="create_time" property="createTime"/>
		<result column="modify_time" property="modifyTime"/>
	</resultMap>
<!--	插入教师课时信息-->
	<insert id="insert" parameterType="edu.yctc.genesis.entity.TeacherLessonDO">
		<selectKey keyProperty="id" order="AFTER" resultType="long">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO tb_teacher_lesson(
			user_id,
			lesson_id,
			create_time,
			modify_time
		) VALUES(
			#{userId},
			#{lessonId},
			NOW(),
			NOW()
		);
	</insert>
<!--	id查询教师课时信息-->
	<select id="getTeacherLessonDOById" parameterType="long" resultMap="TeacherLessonDO">
		SELECT
			id,
			user_id,
			lesson_id,
			create_time,
			modify_time
		FROM tb_teacher_lesson WHERE
			id = #{id}
	</select>
<!--	更新教师课时信息-->
	<update id="update" parameterType="edu.yctc.genesis.entity.TeacherLessonDO">
		UPDATE tb_teacher_lesson
		SET user_id=#{userId},
			lesson_id=#{lessonId},
			modify_time=NOW()
		WHERE id=#{id}
	</update>
<!--	id删除教师课时信息-->
	<delete id="deleteById" parameterType="long">
		DELETE FROM
		tb_teacher_lesson
		WHERE id=#{id}
	</delete>
<!--	lessonId返回教师课时信息-->
	<select id="getTeacherLessonDOByLessonId" parameterType="long" resultMap="TeacherLessonDO">
		SELECT *
		FROM tb_teacher_lesson
		WHERE lesson_id = #{lessonId}
	</select>
<!--	通过userId获得lessonId集-->
	<select id="getLessonIdsByUserId" parameterType="long" resultType="long">
		SELECT
			lesson_id
		FROM tb_teacher_lesson WHERE
		 	user_id = #{userId}
	</select>
<!--	通过userId返回TeacherLessonDO-->
	<select id="getTeacherLessonDOByUserId" parameterType="long" resultMap="TeacherLessonDO">
		SELECT *
		FROM tb_teacher_lesson
		WHERE user_id=#{userId}
	</select>
<!--	判断是否有userId对应的教师-->
	<select id="checkByTeacherId" parameterType="long" resultType="Long">
		SELECT DISTINCT user_id
		FROM tb_teacher_lesson
		WHERE user_id=#{userId}
	</select>
</mapper>