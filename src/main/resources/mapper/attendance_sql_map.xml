<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.yctc.genesis.dao.AttendanceDAO">
	<resultMap type="edu.yctc.genesis.entity.AttendanceDO" id="AttendanceDO">
		<id column="id" property="id" jdbcType="BIGINT"/>
		<result column="user_id" property="userId"/>
		<result column="lesson_id" property="lessonId"/>
		<result column="attend_state" property="attendState"/>
		<result column="create_time" property="createTime"/>
		<result column="modify_time" property="modifyTime"/>
	</resultMap>
<!--	插入一条考勤信息-->
	<insert id="insert" parameterType="edu.yctc.genesis.entity.AttendanceDO">
		<selectKey keyProperty="id" order="AFTER" resultType="long">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO tb_attendance(
			user_id,
			lesson_id,
			attend_state,
			create_time,
			modify_time
		) VALUES(
			#{userId},
			#{lessonId},
			#{attendState},
			NOW(),
			NOW()
		);
	</insert>
<!--	id查询考勤情况-->
	<select id="getAttendanceDOById" parameterType="long" resultMap="AttendanceDO">
		SELECT
			id,
			user_id,
			lesson_id,
			attend_state
			create_time,
			modify_time
		FROM tb_attendance WHERE
			id = #{id}
	</select>
<!--	更新考勤信息-->
	<update id="update" parameterType="edu.yctc.genesis.entity.AttendanceDO">
		UPDATE tb_attendance
		SET user_id=#{userId},
			lesson_id=#{lessonId},
			attend_state=#{attendState},
			modify_time=NOW()
		WHERE id=#{id}
	</update>
<!--	id删除考勤信息-->
	<delete id="deleteById" parameterType="long">
		DELETE FROM
		tb_attendance
		WHERE id=#{id}
	</delete>
<!--	通过lessonId获得所有id-->
	<select id="getIdsByLessonId" resultType="long">
		SELECT id
		FROM tb_attendance
		WHERE lesson_id=#{lessonId}
	</select>
<!--	通过lessonId和userId获得attendState-->
	<select id="getAttendStateByLessonIdAndUserId" resultType="int">
		SELECT attend_state
		FROM tb_attendance
		WHERE lesson_id=#{lessonId} AND user_id = #{userId}
	</select>
<!--	通过lessonId获得所有attendState集-->
	<select id="getAttendStatesByLessonId" resultType="int">
		SELECT attend_state
		FROM tb_attendance
		WHERE lesson_id=#{lessonId}
	</select>
<!--	通过lessonId和userId和attendState获得满足传入参数条件的记录总数量-->
	<select id="getSumByLessonIdAndUserIdAndAttendState" resultType="int">
		SELECT count(*) 
		FROM tb_attendance
		WHERE user_id = #{userId} AND lesson_id = #{lessonId} AND attend_state=#{attendState}
	</select>
<!--	通过lessonId和userId获得满足传入参数条件的记录总数量-->
	<select id="getSumByLessonIdAndUserId" resultType="int">
		SELECT count(*) 
		FROM tb_attendance
		WHERE user_id = #{userId} AND lesson_id = #{lessonId} 
	</select>
<!--	验证是否存在学生id-->
	<select id="checkByStudentId" parameterType="long" resultType="Long">
		SELECT DISTINCT user_id
		FROM tb_attendance
		WHERE user_id=#{userId}
	</select>
<!--	通过userId和lessonId获得对应记录并修改考勤状态-->
	<update id="updateAttendStateByUserIdAndLessonId">
		UPDATE tb_attendance
		SET attend_state=#{attendState},
			modify_time=NOW()
		WHERE user_id=#{userId} AND lesson_id=#{lessonId}
	</update>
<!--	通过lessonId返回考勤情况集-->
	<select id="getAttendanceDOsByLessonId" parameterType="long" resultMap="AttendanceDO">
		SELECT * 
		FROM tb_attendance
		WHERE lesson_id = #{lessonId} 
	</select>
</mapper>