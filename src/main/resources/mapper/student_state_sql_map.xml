<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.yctc.genesis.dao.StudentStateDAO">
	<resultMap type="edu.yctc.genesis.entity.StudentStateDO" id="StudentStateDO">
		<id column="id" property="id" jdbcType="BIGINT"/>
		<result column="user_id" property="userId"/>
		<result column="lesson_id" property="lessonId"/>
		<result column="state" property="state"/>
		<result column="scan_start_time" property="scanStartTime"/>
		<result column="scan_end_time" property="scanEndTime"/>
		<result column="face_token" property="faceToken"/>
		<result column="create_time" property="createTime"/>
		<result column="modify_time" property="modifyTime"/>
	</resultMap>

<!--插入学生上课状态信息-->
	<insert id="insert" parameterType="edu.yctc.genesis.entity.StudentStateDO">
		<selectKey keyProperty="id" order="AFTER" resultType="long">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO tb_student_state(
			user_id,
			lesson_id,
			state,
			scan_start_time,
			scan_end_time,
			face_token,
			create_time,
			modify_time
		) VALUES(
			#{userId},
			#{lessonId},
			#{state},
			NOW(),
			NOW(),
			#{faceToken},
			NOW(),
			NOW()
		);
	</insert>
<!--id查询上课状态信息-->
	<select id="getStudentStateDOById" parameterType="long" resultMap="StudentStateDO">
		SELECT
			id,
			user_id,
			lesson_id,
			state,
			scan_start_time,
			scan_end_time,
			face_token,
			create_time,
			modify_time
		FROM tb_student_state WHERE
			id = #{id}
	</select>
<!--更新学生上课状态-->
	<update id="update" parameterType="edu.yctc.genesis.entity.StudentStateDO">
		UPDATE tb_student_state
		SET user_id=#{userId},
			lesson_id=#{lessonId},
			state=#{state},
			scan_start_time=#{scanStartTime},
			scan_end_time=#{scanEndTime},
			face_token=#{faceToken},
			modify_time=NOW()
		WHERE id=#{id}
	</update>
<!--id删除学生上课状态信息-->
	<delete id="deleteById" parameterType="long">
		DELETE FROM
		tb_student_state
		WHERE id=#{id}
	</delete>
<!--	通过id更新扫描结束时间-->
	<update id="updateScanEndTimeById" parameterType="long">
		UPDATE tb_student_state
		SET scan_end_time=NOW()
		WHERE id=#{id}
	</update>
<!--	通过userId和lessonId返回StudentStateDO集-->
	<select id="getStudentStateDOByUserIdAndLessonId" resultMap="StudentStateDO">
		SELECT *
		FROM tb_student_state
		WHERE user_id=#{userId} AND lesson_id=#{lessonId}
	</select>
<!--	获取被检测的学生的userId-->
	<select id="getUserIdsByLessonId" parameterType="long" resultType="long">
		SELECT DISTINCT user_id
		FROM tb_student_state
		WHERE lesson_id=#{lessonId}
	</select>
</mapper>